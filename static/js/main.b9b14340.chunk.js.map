{"version":3,"sources":["components/CloseIcon.js","context/githubContext.js","constantes.js","components/Search.js","components/RepoItem.js","components/Repo.js","components/ClearIcon.js","components/HistoryItem.js","components/History.js","components/SearchResult.js","pages/home.js","serviceWorker.js","utils/helper.js","types/index.js","reducer/githubReducer.js","client/index.js","actions/GithubAction.js","context/githubState.js","index.js"],"names":["props","className","onClick","onClose","t","viewBox","version","xmlns","p-id","fill","d","githubContext","createContext","TOKEN","process","APP_GITHUB_CLIENT_SECRET","Search","timerRef","useRef","useContext","GithubContext","clearRepo","searchValue","searchGithub","setShowHistory","setSearchValue","type","value","onChange","e","target","clearTimeout","current","setTimeout","placeholder","CloseIcon","item","href","node","url","name","description","repoResult","get","map","index","RepoItem","key","searchHistory","historySearch","clearSearchHistory","ClearIcon","HistoryItem","BScroll","use","Pullup","bscrollRef","bscroll","useState","isPullUpLoad","setISPullUpLoad","loading","showHistory","endCursor","startCursor","hasNextPage","useEffect","pullUpLoad","on","pullingUpHandler","a","finishPullUp","refresh","length","History","ref","Repo","App","errorMessage","message","SearchResult","Boolean","window","location","hostname","match","isExitHistory","arr","filter","getLocalHistoryStorage","data","localStorage","getItem","JSON","parse","state","action","repoList","payload","search","edges","error","client","ApolloClient","uri","cache","InMemoryCache","headers","authorization","dispatch","isShow","setSearchHistory","preData","nextData","setItem","stringify","setLocalHistoryStorage","clear","GithubState","initialState","useReducer","GithubReducer","Provider","params","setLoading","sqlString","getQueryString","query","gql","then","res","setSearchResult","catch","setError","children","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.b9b14340.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default (props) => {\n  return (\n    <div className=\"close\" onClick={props.onClose}>\n      <svg\n        t=\"1602233649182\"\n        className=\"icon\"\n        viewBox=\"0 0 1024 1024\"\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        p-id=\"2386\"\n        fill=\"#000\"\n      >\n        <path\n          d=\"M660.518 682.87c-5.903 0-11.804-2.2-16.306-6.702L342.366 374.372c-9.003-9.003-9.003-23.608 0-32.61s23.608-9.002 32.61 0l301.847 301.796c9.002 9.003 9.002 23.607 0 32.61-4.501 4.5-10.404 6.703-16.305 6.703z\"\n          p-id=\"2387\"\n        ></path>\n        <path\n          d=\"M358.67 682.87c-5.901 0-11.803-2.2-16.304-6.702-9.003-9.003-9.003-23.607 0-32.61l301.846-301.796c9.003-9.002 23.607-9.002 32.61 0 9.002 9.002 9.002 23.607 0 32.61L374.977 676.168c-4.503 4.5-10.404 6.703-16.307 6.703z\"\n          p-id=\"2388\"\n        ></path>\n        <path\n          d=\"M509.62 956.157c-246.579 0-447.244-200.614-447.244-447.242 0-246.58 200.664-447.218 447.243-447.218 246.58 0 447.243 200.638 447.243 447.218 0 246.628-200.664 447.242-447.243 447.242z m0-848.346c-221.172 0-401.13 179.933-401.13 401.105 0 221.169 179.958 401.128 401.13 401.128 221.17 0 401.127-179.959 401.127-401.128 0-221.172-179.957-401.105-401.128-401.105z\"\n          p-id=\"2389\"\n        ></path>\n      </svg>\n    </div>\n  );\n};\n","import { createContext } from \"react\";\n\nconst githubContext = createContext();\n\nexport default githubContext;\n","const MAX_COUNT = 20;\n\nconst NO_DATA = \"暂无搜索数据\";\n\nconst LOADINF_TEXT = \"loading...\";\n\nconst HISTORY_TEXT = \"History\";\n\nconst URL = \"https://api.github.com/graphql\";\n\nconst SEARCH_TEXT = \"Please input search in github\";\n\nconst TOKEN =\n  process.env.APP_GITHUB_CLIENT_SECRET ||\n  \"7b7cc672235587292be65d11d8ae729b14a0d162\";\n\n\nexport {\n  URL,\n  TOKEN,\n  NO_DATA,\n  MAX_COUNT,\n  SEARCH_TEXT,\n  HISTORY_TEXT,\n  LOADINF_TEXT,\n};\n","import React, { useRef, useContext } from \"react\";\nimport CloseIcon from \"./CloseIcon\";\nimport GithubContext from \"../context/githubContext\";\nimport { SEARCH_TEXT } from '../constantes';\n\nconst Search = () => {\n  const timerRef = useRef(null);\n  const githubContext = useContext(GithubContext);\n  const {\n    clearRepo,\n    searchValue,\n    searchGithub,\n    setShowHistory,\n    setSearchValue,\n  } = githubContext;\n\n  const handleSearchInputChanges = (e) => {\n    const value = e.target.value;\n    setSearchValue(value);\n    if (!value) {\n      clearTimeout(timerRef.current);\n    }\n    if (!timerRef.current) {\n      timerRef.current = setTimeout(() => {\n        searchGithub({ searchValue: value });\n      }, 800);\n    } else {\n      clearTimeout(timerRef.current);\n      timerRef.current = setTimeout(() => {\n        searchGithub({ searchValue: value });\n      }, 800);\n    }\n  };\n\n  const resetInputField = () => {\n    setSearchValue(\"\");\n    clearRepo();\n    setShowHistory(true);\n  };\n\n  return (\n    <div className=\"search\">\n      <input\n        type=\"text\"\n        value={searchValue}\n        className=\"search_input\"\n        onChange={handleSearchInputChanges}\n        placeholder={SEARCH_TEXT}\n      />\n      {searchValue && <CloseIcon onClose={resetInputField} />}\n    </div>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\n\nexport default ({ item }) => {\n  return (\n    <li className=\"pullup-list-item item\">\n      <a href={item.node.url}>{item.node.name}</a>\n      <span>({item.node.description})</span>\n    </li>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { get } from \"lodash\";\nimport RepoItem from \"./RepoItem\";\nimport GithubContext from \"../context/githubContext\";\n\nexport default () => {\n  const githubContext = useContext(GithubContext);\n  const repoResult = get(githubContext, \"repoList\") || [];\n  return (\n    <ul className=\"pullup-list\">\n      {repoResult.map((item, index) => (\n        <RepoItem key={index} item={item} />\n      ))}\n    </ul>\n  );\n};\n","import React from \"react\";\n\nexport default () => {\n  return (\n      <svg\n        t=\"1602328570792\"\n        className=\"icon\"\n        viewBox=\"0 0 1024 1024\"\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        p-id=\"1906\"\n        fill=\"#000\"\n      >\n        <path\n          d=\"M745.14 264.76c3.01-3.42 4.85-7.89 4.85-12.77 0-10.67-8.73-19.41-19.41-19.41h-3.55c0.88-3.88 1.08-7.97 0.48-12.12-2.65-18.23-19.72-30.97-37.95-28.32l-278.52 40.45h-40.08c-6.83 0-12.86 3.59-16.32 8.96-9 3.37-16 10.46-19.43 19.16h-11.6c-22.62 0-41.13 18.51-41.13 41.13s18.51 41.13 41.13 41.13h259.15v18.68c0 2.91 0.62 5.67 1.74 8.16 3.21 7.19 10.54 12.13 18.98 11.83 7.88-0.28 14.49-5.24 17.51-12.09 1.14-2.58 1.77-5.42 1.77-8.38v-11.71c0-2.29 0.45-4.48 1.24-6.49h32.96c0.79 2.01 1.24 4.2 1.24 6.49v73.39c0 10.85 8.44 20.08 19.28 20.47 11.37 0.4 20.72-8.7 20.72-19.99v-80.36h29.17c22.62 0 41.13-18.51 41.13-41.13 0.01-16.28-9.57-30.42-23.36-37.08z\"\n          fill=\"#B4E7B4\"\n          p-id=\"1907\"\n        ></path>\n        <path\n          d=\"M658.21 349.45c0-9.83-7.99-17.78-17.81-17.73-4.88 0.02-9.28 2.02-12.47 5.22a17.69 17.69 0 0 0-5.16 12.51v11.71c0 2.96-0.63 5.8-1.77 8.38l37.21-0.26v-19.83zM289.18 489.08c10.86-1.24 18.7-10.95 17.63-21.8 0 0 0.01 0 0-0.01 0 0 0.01-0.01 0-0.02 0 0 0.01 0 0-0.01l-4.33-37.97c0-0.04-0.01-0.08-0.02-0.12l-0.92-8.06c0-0.01 0-0.03-0.01-0.04l-5.6-49.21 288.58-2.04a19.832 19.832 0 0 1-1.74-8.16v-33.01H225.09c-11.04 0-20 8.95-20 20s8.96 20 20 20h30.22l6.47 56.76v0.01l0.96 8.4 4.3 37.68 0.05 0.48c0 0.03 0.01 0.06 0.03 0.08-0.01 0.01 0 0.02 0 0.02 1.41 9.9 9.92 17.15 19.76 17.15 0.76 0 1.53-0.04 2.3-0.13zM297.47 561.71c10.15-1.16 17.66-9.74 17.73-19.71 0.03-0.21 0.05-0.42 0.06-0.63l-0.13-1.14-0.95-8.3c-1.55-10.64-11.3-18.2-22.05-16.95-10.97 1.25-18.85 11.16-17.6 22.14l0.8 6.99c0.11 0.95 0.28 1.88 0.52 2.78v0.01c2.27 8.76 10.23 14.94 19.32 14.94 0.76 0 1.53-0.04 2.3-0.13z\"\n          fill=\"#004039\"\n          p-id=\"1908\"\n        ></path>\n        <path\n          d=\"M798.44 328.63H698.21V369l29.4-0.21-57.78 517.02c-1.45 9.74-9.92 17.05-19.78 17.05H374.3c-9.22 0-17.22-6.4-19.42-15.2-0.14-0.59-32.39-282.84-32.39-282.84-2.92-9.05-11.91-15.09-21.72-13.98-9.84 1.13-17.24 9.08-18.01 18.6 0 0 32.23 282.43 32.28 282.76 4.56 28.95 29.87 50.66 59.26 50.66h275.75c29.81 0 55.36-22.27 59.43-51.79 0.03-0.18 0.05-0.35 0.07-0.52l58.33-521.92h30.56c11.04 0 20-8.95 20-20s-8.96-20-20-20zM811.75 177.99c-1.58-10.93-11.73-18.51-22.66-16.92L589.22 190.1l-6.09-41.98c-1.23-8.45-5.68-15.92-12.54-21.03-6.86-5.12-15.28-7.26-23.73-6.04L443.92 136c-8.45 1.22-15.92 5.68-21.04 12.53-5.12 6.86-7.26 15.29-6.03 23.73l6.09 41.98-201.25 29.23c-10.93 1.58-18.5 11.73-16.91 22.66 1.44 9.96 9.99 17.13 19.76 17.13 0.96 0 1.93-0.07 2.9-0.21l232.91-33.82h0.01l102.94-14.95c0.02 0 0.03-0.01 0.05-0.01l231.49-33.61c10.93-1.59 18.5-11.74 16.91-22.67z m-349.22 30.5l-4.95-34.06 87.11-12.65 4.95 34.06-87.11 12.65z\"\n          fill=\"#004039\"\n          p-id=\"1909\"\n        ></path>\n        <path\n          d=\"M391.46 765.93c1.08 10.28 9.76 17.91 19.87 17.91 0.7 0 1.41-0.04 2.12-0.11 10.99-1.16 18.95-11 17.8-21.98l-26.91-256c-1.16-10.99-10.99-18.95-21.98-17.8-10.99 1.16-18.95 11-17.8 21.98l26.9 256zM610.82 783.72c0.73 0.08 1.45 0.12 2.16 0.12 10.09 0 18.76-7.61 19.86-17.86l27.53-256c1.18-10.98-6.76-20.84-17.75-22.02-10.99-1.19-20.84 6.76-22.02 17.75l-27.53 256c-1.18 10.97 6.77 20.83 17.75 22.01zM513.36 783.84h0.13c11.05-0.07 19.94-9.08 19.87-20.13l-1.67-255.58c-0.07-11-9.01-19.87-20-19.87h-0.13c-11.05 0.07-19.94 9.08-19.87 20.13l1.67 255.58c0.08 11 9.01 19.87 20 19.87z\"\n          fill=\"#004039\"\n          p-id=\"1910\"\n        ></path>\n      </svg>\n  );\n};\n","import React, { useContext } from \"react\";\nimport GithubContext from \"../context/githubContext\";\n\nexport default ({ item }) => {\n  const githubContext = useContext(GithubContext);\n  const { searchGithub, setSearchValue } = githubContext;\n\n  const searchHistory = (item) => {\n    setSearchValue(item);\n    searchGithub({ searchValue: item });\n  };\n\n  return (\n    <span onClick={() => searchHistory(item)} className=\"item\">\n      {item}\n    </span>\n  );\n};\n","import React from \"react\";\nimport ClearIcon from \"./ClearIcon\";\nimport HistoryItem from \"./HistoryItem\";\nimport { HISTORY_TEXT } from \"../constantes\";\n\nexport default (props) => {\n  const { historySearch, clearSearchHistory } = props;\n  return (\n    <div className=\"history\">\n      <div className=\"title\">\n        <span className=\"title_word\">{HISTORY_TEXT}</span>\n        <div className=\"clear\" onClick={clearSearchHistory}>\n          <ClearIcon />\n        </div>\n      </div>\n      {historySearch.map((item, index) => (\n        <HistoryItem key={index} item={item} />\n      ))}\n    </div>\n  );\n};\n","import React, {\n  useState,\n  useEffect,\n  useRef,\n  useContext,\n  Fragment,\n} from \"react\";\nimport { get } from \"lodash\";\nimport BScroll from \"@better-scroll/core\";\nimport Pullup from \"@better-scroll/pull-up\";\nimport Repo from \"./Repo\";\nimport History from \"./History\";\nimport { LOADINF_TEXT, NO_DATA } from \"../constantes\";\nimport GithubContext from \"../context/githubContext\";\nBScroll.use(Pullup);\n\nexport default () => {\n  const bscrollRef = useRef(null);\n  let bscroll = useRef(null);\n  const [isPullUpLoad, setISPullUpLoad] = useState(false);\n  const githubContext = useContext(GithubContext);\n  const {\n    loading,\n    showHistory,\n    searchGithub,\n    searchValue,\n    historySearch,\n    clearSearchHistory,\n  } = githubContext;\n  const endCursor = get(githubContext.repoResult, \"search.pageInfo.endCursor\");\n  const startCursor = get(\n    githubContext.repoResult,\n    \"search.pageInfo.startCursor\"\n  );\n  const hasNextPage = get(\n    githubContext.repoResult,\n    \"search.pageInfo.hasNextPage\"\n  );\n\n  useEffect(() => {\n    if (bscrollRef.current) {\n      bscroll.current = new BScroll(bscrollRef.current, {\n        pullUpLoad: true,\n      });\n      bscroll.current.on(\"pullingUp\", pullingUpHandler);\n    }\n  });\n\n  const pullingUpHandler = async () => {\n    setISPullUpLoad(true);\n    await searchGithub({ hasNextPage, searchValue, endCursor });\n    bscroll.current.finishPullUp();\n    bscroll.current.refresh();\n    setISPullUpLoad(false);\n  };\n\n  const renderHistory = () => {\n    return showHistory && historySearch.length > 0 ? (\n      <History\n        historySearch={historySearch}\n        clearSearchHistory={clearSearchHistory}\n      />\n    ) : null;\n  };\n\n  const renderSearchRepo = () => {\n    const isNoData =\n      !startCursor && !endCursor && searchValue && !loading && !showHistory;\n    return isNoData ? (\n      <div className=\"no_data\">{NO_DATA}</div>\n    ) : (\n      !showHistory && (\n        <div className=\"pullup\">\n          <div ref={bscrollRef} className=\"pullup-wrapper\">\n            <div className=\"pullup-content\">\n              <Repo />\n              {isPullUpLoad && (\n                <div className=\"pullup-tips\">\n                  <div className=\"after-trigger\">\n                    <span className=\"pullup-txt\">{LOADINF_TEXT}</span>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      )\n    );\n  };\n\n  return (\n    <Fragment>\n      {renderHistory()}\n      {renderSearchRepo()}\n    </Fragment>\n  );\n};\n","import React, { Fragment, useContext } from \"react\";\nimport Search from \"../components/Search\";\nimport SearchResult from \"../components/SearchResult\";\nimport GithubContext from \"../context/githubContext\";\nimport { LOADINF_TEXT } from \"../constantes\";\nimport \"../scss/home.scss\";\n\nconst App = () => {\n  const githubContext = useContext(GithubContext);\n  const { loading, errorMessage } = githubContext;\n  const renderError = () => <div className=\"error\">{errorMessage?.message}</div>;\n  const renderLoading = () =>\n    loading && <div className=\"loading\">{LOADINF_TEXT}</div>;\n  return (\n    <div className=\"App\">\n      <div className=\"wrap\">\n        <div className=\"head_box\">\n          <Search />\n        </div>\n        {errorMessage ? (\n          renderError()\n        ) : (\n          <Fragment>\n            <SearchResult />\n            {renderLoading()}\n          </Fragment>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { SEARCH_REPO_HISTORY } from \"../types\";\nimport { MAX_COUNT } from \"../constantes\";\n\nconst isExitHistory = (value, arr) => {\n  return arr.filter((item) => item === value).length;\n};\n\nconst getQueryString = (params) => {\n  let sqlString = `query: \"${params.searchValue}\", type: REPOSITORY, first: ${MAX_COUNT}`;\n  if (params.endCursor && params.hasNextPage) {\n    sqlString = `query:\"${params.searchValue}\", type: REPOSITORY, first: ${MAX_COUNT},after:\"${params.endCursor}\"`;\n  }\n  return sqlString;\n};\n\nconst setLocalHistoryStorage = (value) => {\n  const preData = getLocalHistoryStorage();\n  if (isExitHistory(value, preData)) return;\n  const nextData = [value, ...preData];\n  if (window.localStorage) {\n    localStorage.setItem(SEARCH_REPO_HISTORY, JSON.stringify(nextData));\n  }\n};\n\nconst getLocalHistoryStorage = () => {\n  let data = [];\n  if (window.localStorage) {\n    data = localStorage.getItem(SEARCH_REPO_HISTORY);\n    data = data ? JSON.parse(data) : [];\n  }\n  return data;\n};\n\nconst clearLocalHistoryStorage = () => {\n  if (window.localStorage) {\n    localStorage.clear();\n  }\n};\n\nexport {\n  isExitHistory,\n  getQueryString,\n  getLocalHistoryStorage,\n  setLocalHistoryStorage,\n  clearLocalHistoryStorage,\n};\n","export const SEARCH_REPO_REQUEST = \"SEARCH_REPO_REQUEST\";\nexport const SEARCH_REPO_SUCCESS = \"SEARCH_REPO_SUCCESS\";\nexport const SEARCH_REPO_FAILURE = \"SEARCH_REPO_FAILURE\";\nexport const SEARCH_CLEAR_REPO = \"SEARCH_CLEAR_REPO\";\nexport const SEARCH_REPO_HISTORY = \"SEARCH_REPO_HISTORY\";\nexport const SEARCH_REPO_HISTORY_CLEAR = \"SEARCH_REPO_HISTORY_CLEAR\";\nexport const SEARCH_VALUE = \"SEARCH_VALUE\";\nexport const SEARCH_SHWO_HISTORY = \"SEARCH_SHWO_HISTORY\";\n","import {\n  SEARCH_VALUE,\n  SEARCH_SHWO_HISTORY,\n  SEARCH_REPO_REQUEST,\n  SEARCH_REPO_SUCCESS,\n  SEARCH_REPO_FAILURE,\n  SEARCH_CLEAR_REPO,\n  SEARCH_REPO_HISTORY,\n  SEARCH_REPO_HISTORY_CLEAR,\n} from \"../types\";\n\nimport { isExitHistory } from \"../utils/helper\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case SEARCH_REPO_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case SEARCH_REPO_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        repoList: [...action.payload.search.edges, ...state.repoList],\n        repoResult: action.payload,\n      };\n    case SEARCH_REPO_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        errorMessage: action.error,\n      };\n    case SEARCH_VALUE:\n      return {\n        ...state,\n        loading: false,\n        searchValue: action.payload,\n      };\n    case SEARCH_CLEAR_REPO:\n      return {\n        ...state,\n        repoList: [],\n        repoResult: {},\n        errorMessage: null,\n      };\n    case SEARCH_REPO_HISTORY:\n      if (!isExitHistory(action.payload, state.historySearch)) {\n        return {\n          ...state,\n          historySearch: [action.payload, ...state.historySearch],\n        };\n      }\n      return state;\n\n    case SEARCH_REPO_HISTORY_CLEAR:\n      return {\n        ...state,\n        historySearch: [],\n      };\n    case SEARCH_SHWO_HISTORY:\n      return {\n        ...state,\n        showHistory: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import { ApolloClient, InMemoryCache } from \"@apollo/client\";\nimport { URL, TOKEN } from \"../constantes\";\n\nconst client = new ApolloClient({\n  uri: URL,\n  cache: new InMemoryCache(),\n  headers: {\n    authorization: `bearer ${TOKEN}`,\n  },\n});\n\nexport default client;\n","import { gql } from \"@apollo/client\";\nimport client from \"../client\";\nimport {\n  SEARCH_VALUE,\n  SEARCH_SHWO_HISTORY,\n  SEARCH_REPO_REQUEST,\n  SEARCH_REPO_SUCCESS,\n  SEARCH_REPO_FAILURE,\n  SEARCH_CLEAR_REPO,\n  SEARCH_REPO_HISTORY,\n  SEARCH_REPO_HISTORY_CLEAR,\n} from \"../types\";\n\nimport {\n  getQueryString,\n  getLocalHistoryStorage,\n  setLocalHistoryStorage,\n  clearLocalHistoryStorage,\n} from \"../utils/helper\";\n\nconst setLoading = (dispatch) => dispatch({ type: SEARCH_REPO_REQUEST });\n\nconst clearRepo = (dispatch) => dispatch({ type: SEARCH_CLEAR_REPO });\n\nconst setError = (dispatch, error) => {\n  dispatch({\n    type: SEARCH_REPO_FAILURE,\n    error: error,\n  });\n};\n\nconst setShowHistory= (dispatch, isShow) => {\n  dispatch({\n    type: SEARCH_SHWO_HISTORY,\n    payload: isShow,\n  });\n};\n\nconst setSearchValue = (dispatch, data) => {\n  dispatch({\n    type: SEARCH_VALUE,\n    payload: data,\n  });\n};\n\nconst setSearchHistory = (dispatch, data) => {\n  const { searchValue } = data;\n  setLocalHistoryStorage(searchValue);\n  dispatch({\n    type: SEARCH_REPO_HISTORY,\n    payload: searchValue,\n  });\n};\n\nconst clearSearchHistory = (dispatch) => {\n  clearLocalHistoryStorage();\n  dispatch({\n    type: SEARCH_REPO_HISTORY_CLEAR,\n  });\n};\n\nconst setSearchResult = (dispatch, data) => {\n  dispatch({\n    type: SEARCH_REPO_SUCCESS,\n    payload: data,\n  });\n};\n\nconst searchGithub = (dispatch, params) => {\n  const { searchValue, hasNextPage } = params;\n  if (hasNextPage === false || !searchValue) {\n    return;\n  }\n  setLoading(dispatch);\n  const sqlString = getQueryString(params);\n  return client\n    .query({\n      query: gql`\n        query {\n          search(${sqlString}) {\n            repositoryCount\n            pageInfo {\n              hasNextPage\n              endCursor\n              startCursor\n            }\n            edges {\n              node {\n                ... on Repository {\n                  id\n                  url\n                  nameWithOwner\n                  name\n                  createdAt\n                  description\n                  descriptionHTML\n                  forkCount\n                  updatedAt\n                }\n              }\n            }\n          }\n        }\n      `,\n    })\n    .then((res) => {\n      setSearchResult(dispatch, res.data);\n      setSearchHistory(dispatch, params);\n      setShowHistory(dispatch,false);\n    })\n    .catch((error) => {\n      setError(dispatch, error);\n    });\n};\n\nexport {\n  setLoading,\n  clearRepo,\n  setError,\n  setShowHistory,\n  setSearchValue,\n  searchGithub,\n  setSearchResult,\n  getQueryString,\n  setSearchHistory,\n  clearSearchHistory,\n  getLocalHistoryStorage\n};\n","import React, { useReducer } from \"react\";\nimport GithubContext from \"./githubContext\";\nimport GithubReducer from \"../reducer/githubReducer\";\nimport {\n  clearRepo,\n  searchGithub,\n  setSearchValue,\n  setShowHistory,\n  clearSearchHistory,\n  getLocalHistoryStorage,\n} from \"../actions/GithubAction\";\n\nconst GithubState = (props) => {\n  const initialState = {\n    loading: false,\n    searchValue: \"\",\n    repoList: [],\n    repoResult: {},\n    historySearch: getLocalHistoryStorage(),\n    errorMessage: null,\n    showHistory: true,\n  };\n\n  const [state, dispatch] = useReducer(GithubReducer, initialState);\n\n  return (\n    <GithubContext.Provider\n      value={{\n        loading: state.loading,\n        repoList: state.repoList,\n        repoResult: state.repoResult,\n        searchValue: state.searchValue,\n        errorMessage: state.errorMessage,\n        showHistory: state.showHistory,\n        historySearch: state.historySearch,\n        clearRepo: () => clearRepo(dispatch),\n        clearSearchHistory: () => clearSearchHistory(dispatch),\n        searchGithub: (params) => searchGithub(dispatch, params),\n        setShowHistory: (value) => setShowHistory(dispatch, value),\n        setSearchValue: (value) => setSearchValue(dispatch, value),\n      }}\n    >\n      {props.children}\n    </GithubContext.Provider>\n  );\n};\n\nexport default GithubState;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Home from \"./pages/home\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport GithubState from \"./context/githubState\";\nReactDOM.render(\n  <React.StrictMode>\n    <GithubState>\n      <Home />\n    </GithubState>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}